#!/usr/bin/env perl

use 5.010001;
use strict;
use warnings;
use FindBin '$Bin';

use File::Slurper qw(write_text);

my $catalog_path = "$Bin/../devdata/catalog.csv";

my %codes; # key=safename
{
    my %seen;
    open my $fh, "<", "$Bin/../devdata/code.csv" or die;
    <$fh>;
    while (my $line = <$fh>) {
        chomp $line;
        my @ff = split /\t|,/, $line;
        $ff[0] =~ /\A\w{1,10}\z/ or die "Invalid code in code.csv: $ff[0]";
        die "Code $ff[0] given to multiple exchanges" if $codes{$ff[1]};
        die "Duplicate code $ff[0]" if $seen{$ff[0]}++;
        $codes{$ff[1]} = $ff[0];
    }
}

my @scrape_result;
my %by_safename;
my %by_name;
my %by_name_lc;
my %by_code_lc;
LOAD_SCRAPE_RESULT: {
    open my $fh, "<", "$Bin/../devdata/scrape-result.csv" or die;
    <$fh>;
    while (defined(my $line = <$fh>)) {
        chomp $line;
        my @ff = split /\t/, $line;
        my ($name, $safename) = @ff;

        $by_name_lc{lc $name}++ and die "Duplicate name $name";
        $by_name{$name} = {safename => $safename};

        $by_safename{$safename} and die "Duplicate safename $safename";
        $by_safename{$safename} = {name => $name};

        my $autocode;
        {
            my $s1 = uc($safename);
            $s1 =~ s/-//g;
            my $s2 = uc($name);
            $s2 =~ s/[^A-Za-z0-9]+//g;
            my @candidates = sort { length($a)<=>length($b) }
                grep { length($_)>=1 && length($_)<=10 } ($s1, $s2);
            $autocode = $candidates[0] if @candidates;
        }
        my $code = $codes{$safename} // $autocode;
        if (defined $code) {
            $by_code_lc{lc $code} and die "Duplicate code $code";
            $by_code_lc{lc $code} = {safename => $safename};
        }

        push @scrape_result, [$name, $safename, $code];
    }
}

@scrape_result = sort {$a->[0] cmp $b->[0]} @scrape_result;
write_text($catalog_path, join("", map {join("\t", grep {defined} @$_)."\n"} @scrape_result));
